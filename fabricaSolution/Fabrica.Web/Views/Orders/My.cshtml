@using Fabrica.Infrastructure
@using Fabrica.Web.Models
@using Fabrica.Services.Models
@using Fabrica.Models
@using Microsoft.EntityFrameworkCore.Internal
@model string

@{
    var user = ((Task<FabricaUser>)ViewData["CurrentUser"]);
    var propsOrder = (IEnumerable<PropOrderServiceModel>)ViewData["props"];
    var marvsOrder = (IEnumerable<MarvelousPropOrderServiceModel>)ViewData["marvs"];

    var propsCounter = 1;
    var marvsCounter = 1;

    var confirmStatus = GlobalConstants.confirmStatus;
    var waitingStatus = GlobalConstants.waitingStatus;

    ViewData["Title"] = "My Shopping bag";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<header class="bg-white text-white text-center">
    <br />
    <br />
    <br />
    <br />
    <br />
    <h1 class="masthead-heading text-uppercase text-center text-secondary" style="font-size: 55px">MY shopping bag :</h1>
    <div class="row" style="padding-left: 15px; padding-right: 0px; margin-right: 0px;">

        <div id="props" class="container">

            <section class="col-md-12 masthead-heading text-uppercase text-secondary">
                <br />
                <br />
                <h1>[ 3d Props ]</h1>
                <p class="masthead-heading text-uppercase">Purchased props</p>
            </section>

            <table class="container">

                @{
                    var propOrderServiceModels = propsOrder.ToList();
                }

                @if (propOrderServiceModels.Select(x => x.Order.Props).Count() != 0)
                {
                    <tr class="masthead-subheading bg-primary text-uppercase text-md-right text-white">
                        <th>#</th>
                        <th>Name</th>
                        <th>Purchased on</th>
                        <th>Price</th>
                        <th>Creator</th>
                        <th>Status</th>
                    </tr>

                    @foreach (var ord in propOrderServiceModels.OrderByDescending(x=>x.Order.OrderedOn))
                    {
                        <tr>
                            <td>@propsCounter</td>
                            <td>@ord.Prop.Name</td>
                            <td>@ord.Order.OrderedOn.ToString("dd/MM/yyyy")</td>
                            <td>@ord.Prop.Price</td>
                            <td>@ord.Prop.PropCreatorId</td>
                            

                            @if (ord.Order.IsActive)
                            {
                                <td>
                                    <a class="btn btn-danger">Cancel</a>
                                </td>
                            }
                            else
                            {
                                <td class="text-primary">@confirmStatus</td>
                            }
                        </tr>
                        propsCounter++;
                    }
                }
                else
                {
                    <tr>
                        <td class="text-danger text-uppercase">@GlobalConstants.nonPurchased</td>
                    </tr>
                }

            </table>

            <div class="container prop-item d-flex align-items-center flex-column text-secondary">
                <a class="js-scroll-trigger" href="#props"><i class="fa fa-2x fa-arrow-circle-up"></i></a>
            </div>
        </div>
    </div>

    <br>
    <br>
    <br>

    <div class="row" style="padding-left: 15px; padding-right: 0px; margin-right: 0px;">
        <div id="marvs" class="container">

            <section class="col-md-12 masthead-heading text-uppercase text-secondary">
                <h1>[ Marvelous Props ]</h1>
                <p class="masthead-heading text-uppercase">Purchased Marvelous props</p>
            </section>

            <table class="container">

                @{
                    var marvelousPropOrderServiceModels = marvsOrder.ToList();
                }

                @if (marvelousPropOrderServiceModels.Select(x => x.Order.Props).Count() != 0)
                {
                    <tr class="masthead-subheading bg-primary text-uppercase text-md-right text-white">
                        <th>#</th>
                        <th>Name</th>
                        <th>Purchased on</th>
                        <th>Points</th>
                        <th>Creator</th>
                        <th>Status</th>
                    </tr>

                    @foreach (var ord in marvelousPropOrderServiceModels.OrderByDescending(x=>x.Order.OrderedOn))
                    {
                        var a = ord.Order.ClientId == user.Result.Id;
                        <tr>
                            <td>@marvsCounter</td>
                            <td>@ord.MarvelousProp.Name</td>
                            <td>@ord.Order.OrderedOn.ToString("dd/MM/yyyy")</td>
                            <td>@ord.MarvelousProp.Points</td>
                            <td>@ord.MarvelousProp.MarvelousCreatorId</td>

                            @if (ord.Order.IsActive)
                            {
                                <td>
                                    <a class="btn btn-danger">Cancel</a>
                                </td>
                            }
                            else
                            {
                                <td class="text-primary">@confirmStatus</td>
                            }
                        </tr>
                        marvsCounter++;
                    }
                }
                else
                {
                    <tr>
                        <td class="text-danger text-uppercase">@GlobalConstants.nonPurchased</td>
                    </tr>
                }
            </table>

            <div class="container prop-item d-flex align-items-center flex-column text-secondary">
                <a class="js-scroll-trigger" href="#marvs"><i class="fa fa-2x fa-arrow-circle-up"></i></a>
            </div>

            <br />
            <div class="container-fluid row">
                <div class="col-md-12" style="padding-left: 75%">
                    <a class="btn btn-warning py-lg-4">CONFIRM ALL</a>
                </div>
            </div>
        </div>
    </div>
    <br>
    <br>

    <!-- Icon Divider -->
    <div class="divider-custom divider-light">
        <div class="divider-custom-line"></div>
        <div class="divider-custom-icon">
            <i class="fas fa-star"></i>
        </div>
        <div class="divider-custom-line"></div>
    </div>
</header>